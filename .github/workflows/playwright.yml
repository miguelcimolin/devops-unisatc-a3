name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20 

      - name: Instalar dependÃªncias
        run: npm ci

      - name: Instalar navegadores do Playwright
        run: npx playwright install --with-deps

      - name: Criar arquivo .env
        run: |
          echo "ADMIN_JWT_SECRET=${{ vars.ADMIN_JWT_SECRET }}" >> .env
          echo "API_TOKEN_SALT=${{ vars.API_TOKEN_SALT }}" >> .env
          echo "APP_KEYS=${{ vars.APP_KEYS }}" >> .env
          echo "DATABASE_CLIENT=${{ vars.DATABASE_CLIENT }}" >> .env
          echo "DATABASE_FILENAME=${{ vars.DATABASE_FILENAME }}" >> .env
          echo "DATABASE_SSL=${{ vars.DATABASE_SSL }}" >> .env
          echo "HOST=${{ vars.HOST }}" >> .env
          echo "JWT_SECRET=${{ vars.JWT_SECRET }}" >> .env
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "TRANSFER_TOKEN_SALT=${{ vars.TRANSFER_TOKEN_SALT }}" >> .env

      - name: Run Strapi + Playwright
        run: bash -c "npm run dev & npx wait-on http://localhost:1337/admin && npx playwright test"

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/devops_strapi:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/devops_strapi:latest
